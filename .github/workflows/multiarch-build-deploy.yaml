name: Build and Deploy Images
on:
  push:
    branches:
      - main

env:
  REPO_NAME: mistericy

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: Build PHP ${{matrix.version}}-${{ matrix.os }}
    env:
      ubuntu-latest: amd64
      macos-latest: arm64
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        version: [ '7.4', '8.0', '8.1' ]


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Docker
        if: matrix.os == 'macos-latest'
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install --cask docker \
          sudo /Applications/Docker.app/Contents/MacOS/Docker --unattended --install-privileged-components \
          open -a /Applications/Docker.app --args --unattended --accept-license \
          echo "We are waiting for Docker to be up and running. It can take over 2 minutes..." \
          while ! /Applications/Docker.app/Contents/Resources/bin/docker info &>/dev/null; do sleep 1; done

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Image
        run: |
          docker build --platform linux/${{env[matrix.os]}} \
          --build-arg ARCH=${{env[matrix.os]}} \
          --build-arg VERSION=${{matrix.version}} \
          -t ${{env.REPO_NAME}}/php${{matrix.version}}:manifest-${{env[matrix.os]}} .

      - name: Push Image
        run: |
          docker push ${{ env.REPO_NAME}}/php-${{matrix.version}}:manifest-${{matrix.arch}}

  createmanifest:
    needs: build
    runs-on: ubuntu-latest
    name: Create Manifest
    strategy:
      matrix:
        version: [ '7.4', '8.0', '8.1' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Update Manifests
        run: |
          docker manifest create ${{ env.REPO_NAME}}/php-${{matrix.version}}:manifest-latest --amend ${{ env.REPO_NAME}}/php-${{matrix.version}}:manifest-amd64 --amend ${{ env.REPO_NAME}}/php-${{matrix.version}}:manifest-arm64

      - name: Push Manifests
        run: |
          docker manifest push ${{ env.REPO_NAME}}/php-${{matrix.version}}:manifest-latest         
